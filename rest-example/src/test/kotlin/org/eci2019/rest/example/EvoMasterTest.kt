package org.eci2019.rest.example


import  org.junit.jupiter.api.AfterAll
import  org.junit.jupiter.api.BeforeAll
import  org.junit.jupiter.api.BeforeEach
import  org.junit.jupiter.api.Test
import  org.junit.jupiter.api.Assertions.*
import  io.restassured.RestAssured
import  io.restassured.RestAssured.given
import  org.evomaster.client.java.controller.api.EMTestUtils.*
import  org.evomaster.client.java.controller.SutHandler
import  org.evomaster.client.java.controller.db.dsl.SqlDsl.sql
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto
import  java.util.List




/**
 * This file was automatically generated by EvoMaster on 2019-07-18T19:09:39.499+02:00[Europe/Oslo]
 * <br>
 * The generated test suite contains 29 tests
 * <br>
 * Covered targets: 197
 * <br>
 * Used time: 0h 10m 0s
 * <br>
 * Needed budget for current results: 96%
 */
internal class EvoMasterTest {

    
    companion object {
        private val controller : SutHandler = org.eci2019.rest.example.EvoMasterDriver()
        private lateinit var baseUrlOfSut: String
        
        
        @BeforeAll
        @JvmStatic
        fun initClass() {
            baseUrlOfSut = controller.startSut()
            assertNotNull(baseUrlOfSut)
            RestAssured.urlEncodingEnabled = false
        }
        
        
        @AfterAll
        @JvmStatic
        fun tearDown() {
            controller.stopSut()
        }
    }
    
    
    @BeforeEach
    fun initTest() {
        controller.resetStateOfSUT()
    }
    
    
    
    
    @Test
    fun test0()  {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/aR68cCn")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test1()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/bWpz_IxGuRa8N")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/0")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/_shf3lr68MZkf")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/hFwi_y8Po2Vb48")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"year\": 90.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"gPb6SDEDes3\"," + 
                    "\"id\": \"2xp5NYL9bCsobw6l\"," + 
                    "\"year\": 5.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test2()  {
        val insertions = sql().insertInto("BOOK", 6L)
                .d("ID", "1907290056")
                .d("YEAR", "-42066915")
            .and().insertInto("BOOK", 5L)
                .d("ID", "3790337733873006108")
                .d("YEAR", "-268436484")
            .and().insertInto("BOOK", 4L)
                .d("ID", "2654592")
                .d("YEAR", "-31295")
            .and().insertInto("BOOK", 3L)
                .d("ID", "406567012209733191")
                .d("YEAR", "-16289914")
            .and().insertInto("BOOK", 2L)
                .d("ID", "-8644349083970004998")
                .d("YEAR", "-20713071")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"UEqulFdeHZ7\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"Bja8cVC1frs9H\"," + 
                    "\"title\": \"m37\"," + 
                    "\"year\": 714.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"NwH\"," + 
                    "\"title\": \"ov\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"t8oH\"," + 
                    "\"year\": 828.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"WXlhjYcOzB2wXBM\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/9")
                .then()
                .statusCode(409);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(204);
    }
    
    
    @Test
    fun test3()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"Az\"," + 
                    "\"title\": \"irGY6Vk7LLpK\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/OPTQGJHDj")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test4()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"MbZp6d9mTw\"," + 
                    "\"title\": \"Mlcdjk8wf\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/T0RAE")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"6eQcwIt08YmU\"," + 
                    "\"id\": \"hEKWFKLb9Hh\"," + 
                    "\"title\": \"\"," + 
                    "\"year\": 107.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/6")
                .then()
                .statusCode(409);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/6")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"mNcNJT\"," + 
                    "\"year\": 256.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/l")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test5()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/v5DntjwDY")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test6()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"4ZvRmiJ3cEwAQ\"," + 
                    "\"year\": 24.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/9HCA0h2_6Xj")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"lK7jwvNpTN6E3at\"," + 
                    "\"title\": \"8m\"," + 
                    "\"year\": 337.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/ul")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"y6l5P\"," + 
                    "\"id\": \"mpHgsyXg7\"," + 
                    "\"year\": 94.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/_A_SBCHDcvRZtZ")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/7")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test7()  {
        val insertions = sql().insertInto("BOOK", 106L)
                .d("ID", "4382509221669122505")
                .d("YEAR", "2136")
            .and().insertInto("BOOK", 105L)
                .d("ID", "121586590")
                .d("YEAR", "-18230")
            .and().insertInto("BOOK", 104L)
                .d("ID", "1725348479")
                .d("YEAR", "2184")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"u6UVMyAf0NIyz16\"," + 
                    "\"id\": \"wmw3P2\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/wfnHy")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"MASJgkT6EenoGM\"," + 
                    "\"title\": \"nFabi\"," + 
                    "\"year\": 854.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"zVCj5jFxXPEw34U0\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/ZW")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test8()  {
        val insertions = sql().insertInto("BOOK", 152L)
                .d("ID", "595660172")
                .d("YEAR", "-5416")
            .and().insertInto("BOOK", 151L)
                .d("ID", "-1702038681")
                .d("YEAR", "-730169088")
            .and().insertInto("BOOK", 150L)
                .d("ID", "-463665877")
                .d("YEAR", "-3129")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"2Nu0KQeMcM\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/P5Ws1F")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"83PjKi_\"," + 
                    "\"title\": \"XCpUSrd89gplzn5q\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"T9mLLcNphFKrk\"," + 
                    "\"title\": \"eLkTx\"," + 
                    "\"year\": 165.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"eG\"," + 
                    "\"year\": 320.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"KiNCpdFi_\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(204);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/;%5CY")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test9()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"caBUt2h\"," + 
                    "\"title\": \"dNHm6Tz\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test10()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"eUwwKE\"," + 
                    "\"year\": 10.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test11()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test12()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/c_SwXq")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"Gsb2ZYD8\"," + 
                    "\"title\": \"AgO\"," + 
                    "\"year\": 384.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/2")
                .then()
                .statusCode(409);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/mjci0V")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test13()  {
        val insertions = sql().insertInto("BOOK", 6L)
                .d("ID", "3927827404778588710")
                .d("YEAR", "-42070234")
            .and().insertInto("BOOK", 5L)
                .d("ID", "-68984498")
                .d("YEAR", "-268431000")
            .and().insertInto("BOOK", 4L)
                .d("ID", "6033841249151908902")
                .d("YEAR", "-29560")
            .and().insertInto("BOOK", 3L)
                .d("ID", "6331086765444606110")
                .d("YEAR", "-16291624")
            .and().insertInto("BOOK", 2L)
                .d("ID", "47887743")
                .d("YEAR", "-20709667")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"MIvHFYrZBaP5VG6\"," + 
                    "\"year\": 649.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"HBgOzE3981v\"," + 
                    "\"title\": \"Tg\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"c43li87ZVu\"," + 
                    "\"title\": \"UBBYRAAZncZquyV\"," + 
                    "\"year\": 985.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"d\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/0CF")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(204);
    }
    
    
    @Test
    fun test14()  {
        
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"cH\"," + 
                    "\"title\": \"d\"," + 
                    "\"year\": 264.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test15()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"ABCxPW0XQvIyglG\"," + 
                    "\"id\": \"YWQ\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test16()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"7ytVBvSnQbXwK19m\"," + 
                    "\"title\": \"YGpb1ikhyz20ERVA\"," + 
                    "\"year\": 757.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"9ka0\"," + 
                    "\"title\": \"En7fCswVdGGYPX\"," + 
                    "\"year\": 608.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
    }
    
    
    @Test
    fun test17()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"0DbJ9yixBjoiTwK\"," + 
                    "\"title\": \"xXEWJ4uGOH42cn\"," + 
                    "\"year\": 895.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
    }
    
    
    @Test
    fun test18()  {
        
        var location_books : String? = ""
        
        location_books = given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"PCX9PpBpaRcVC\"," + 
                    "\"title\": \"0JETz1vsA\"," + 
                    "\"year\": 335.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201)
                .extract().header("location");
                
        assertTrue(isValidURIorEmpty(location_books));
        
        given().accept("*/*")
                .delete(resolveLocation(location_books, baseUrlOfSut + "/api/books/NrLEO5WYe6w"))
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test19()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/7")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test20()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"3\"," + 
                    "\"title\": \"lX8jCa5h\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/3")
                .then()
                .statusCode(404);
    }
    
    
    @Test
    fun test21()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"Gsb2ZYD8\"," + 
                    "\"title\": \"AgO\"," + 
                    "\"year\": 384.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/2")
                .then()
                .statusCode(409);
    }
    
    
    @Test
    fun test22()  {
        val insertions = sql().insertInto("BOOK", 130L)
                .d("ID", "46843315")
                .d("YEAR", "68")
            .and().insertInto("BOOK", 129L)
                .d("ID", "799552326")
                .d("YEAR", "450")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"k_O5HzY\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/4")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test23()  {
        val insertions = sql().insertInto("BOOK", 6L)
                .d("ID", "287211163")
                .d("YEAR", "273")
            .and().insertInto("BOOK", 5L)
                .d("ID", "47647065")
                .d("YEAR", "-268434884")
            .and().insertInto("BOOK", 4L)
                .d("ID", "-2821001940888375946")
                .d("YEAR", "938")
            .and().insertInto("BOOK", 3L)
                .d("ID", "-797323884")
                .d("YEAR", "390")
            .and().insertInto("BOOK", 2L)
                .d("ID", "-3345945024538186517")
                .d("YEAR", "590")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"lCv1kxF_lpU2_T\"," + 
                    "\"title\": \"NRIY\"," + 
                    "\"year\": 770.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/TR0RAE")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{}")
                .put(baseUrlOfSut + "/api/books/6")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/6")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"title\": \"mNcNJT\"," + 
                    "\"year\": 256.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/l")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test24()  {
        val insertions = sql().insertInto("BOOK", 106L)
                .d("ID", "-954182143")
                .d("YEAR", "2137")
            .and().insertInto("BOOK", 105L)
                .d("ID", "-5019906052322027399")
                .d("YEAR", "-14170")
            .and().insertInto("BOOK", 104L)
                .d("ID", "-8116228015060353912")
                .d("YEAR", "2200")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"MASJgkT6EenoGM\"," + 
                    "\"title\": \"nFabi\"," + 
                    "\"year\": 854.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/ZW%C2%88")
                .then()
                .statusCode(400);
    }
    
    
    @Test
    fun test25()  {
        val insertions = sql().insertInto("BOOK", 6L)
                .d("ID", "-43223948590444023")
                .d("YEAR", "-33552621")
            .and().insertInto("BOOK", 5L)
                .d("ID", "-688820429")
                .d("YEAR", "-269483780")
            .and().insertInto("BOOK", 4L)
                .d("ID", "-456439034")
                .d("YEAR", "2200")
            .and().insertInto("BOOK", 3L)
                .d("ID", "143833427")
                .d("YEAR", "-8453754")
            .and().insertInto("BOOK", 2L)
                .d("ID", "1735280495")
                .d("YEAR", "-16776611")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"X\"," + 
                    "\"title\": \"gBk3P8TnLlWJ\"" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"c43li87ZVu\"," + 
                    "\"title\": \"UBBYRAAZncZquyV\"," + 
                    "\"year\": 985.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(201);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"znflIA5\"," + 
                    "\"year\": 326.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/0")
                .then()
                .statusCode(409);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(204);
    }
    
    
    @Test
    fun test26()  {
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"q_KRjHlMCaR\"," + 
                    "\"id\": \"s8QGDsSnS10ZrZtk\"," + 
                    "\"title\": \"ZiQVyeSRcW\"," + 
                    "\"year\": 724.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/502")
                .then()
                .statusCode(409);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/;UY")
                .then()
                .statusCode(405);
    }
    
    
    @Test
    fun test27()  {
        val insertions = sql().insertInto("BOOK", 152L)
                .d("ID", "1723987820")
                .d("YEAR", "-410")
            .and().insertInto("BOOK", 151L)
                .d("ID", "7225201842365575810")
                .d("YEAR", "-730165500")
            .and().insertInto("BOOK", 150L)
                .d("ID", "-463665877")
                .d("YEAR", "1878")
            .dtos()
        controller.execInsertionsIntoDatabase(insertions)
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(500);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/1")
                .then()
                .statusCode(404);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/;Qv")
                .then()
                .statusCode(500);
    }
    
    
    @Test
    fun test28()  {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/oynM5HxBmqVnh")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"GdzhKeFFt\"," + 
                    "\"id\": \"PO0KbsZ4C2kxkzB\"," + 
                    "\"year\": 837.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/QkPMZYAPmM8qvBd")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"JFh0OFsyY\"," + 
                    "\"id\": \"i2iTarrrr022Uh\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/0OPbnFQkbsQ")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books/KW")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/books/qk")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"qGIeE5UNVZXMv\"," + 
                    "\"title\": \"09X8kdrz8qOT\"," + 
                    "\"year\": 383.0" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/;Q")
                .then()
                .statusCode(405);
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(200);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"id\": \"Lp\"," + 
                    "\"title\": \"USQ3uH4leWP\"," + 
                    "\"year\": 23.0" + 
                    "}")
                .post(baseUrlOfSut + "/api/books")
                .then()
                .statusCode(400);
        
        given().accept("*/*")
                .contentType("application/json;charset=UTF-8")
                .body("{" + 
                    "\"author\": \"c\"" + 
                    "}")
                .put(baseUrlOfSut + "/api/books/QB3ApT")
                .then()
                .statusCode(400);
    }


}
